--------2025-03-10 8장 복습--------------------------
SELECT * FROM EMP2; --EMPNO
SELECT * FROM P_GRADE; --X
SELECT * FROM PROFESSOR; -- PROFNO
SELECT * FROM CUSTOMER; --X
SELECT * FROM GIFT; --X
SELECT * FROM EMP;

--------------8장 A6 강사님------------------
--자기자신 조인 맞았다
SELECT E1.EMPNO "EMPNO"
,E1.ENAME "ENAME"
,TO_CHAR(E1.HIREDATE, 'YY/MM/DD') "HIREDATE"
,COUNT(E2.HIREDATE) "COUNT"
FROM EMP E1, EMP E2
WHERE E2.HIREDATE(+) < E1.HIREDATE
GROUP BY E1.EMPNO, E1.ENAME, E1.HIREDATE
--다 중복되니까 그룹을 위에 컬럼 만든거로 다 지정해야 중복되지않는다.
ORDER BY 4;

--------------8장 A6 ------------------
SELECT * FROM EMP;

SELECT E1.EMPFNO "EMPNO"
,E1.ENAME "ENAME"
,E1.HIREDATE "HIREDATE"
,COUNT(E2.HIREDATE) "COUNT"
FROM EMP E1, EMP E2
WHERE E2.HIREDATE(+) < E1.HIREDATE
GROUP BY E1.EMPFNO, E1.ENAME, E1.HIREDATE
ORDER BY 4;
--------------8장 A5 강사님------------------
--자기자신 비교 자기자신 조인인가?
SELECT P1.PROFNO
,P1.NAME
,TO_CHAR(P1.HIREDATE, 'YYYY/MM/DD') "HIREDATE"
,COUNT(P2.HIREDATE) "COUNT"
FROM PROFESSOR P1, PROFESSOR P2
WHERE P2.HIREDATE(+) < P1.HIREDATE
GROUP BY P1.PROFNO, P1.NAME, P1.HIREDATE
ORDER BY 4;


--------------8장 A5------------------
SELECT PROFNO
,NAME
,HIREDATE
,DENSE_RANK() OVER(ORDER BY HIREDATE )"COUNT"
FROM PROFESSOR;

--------------8장 A4 강사님------------------
SELECT C.GNAME CUST_NAME
,C.POINT POINT
,G.GNAME GIFT_NAME
--둘다 PK없다 
FROM CUSTOMER C, GIFT G
WHERE G.G_START < C.POINT  
AND G.GNAME = 'Notebook';
--------------8장 A4------------------
SELECT * FROM CUSTOMER;
SELECT * FROM GIFT;

SELECT C.GNAME CUST_NAME
,C.POINT POINT
,G.GNAME GIFT_NAME
--둘다 PK없다 비등가 같아서 시도 - 실패.. ㅋㅋㅋ
FROM CUSTOMER C, GIFT G
--WHERE (C.POINT BETWEEN G_START AND G_END)
WHERE C.POINT > 600001 
AND G.GNAME = 'Notebook';
--------------8장 A3-강사님-비등가------------------
SELECT E.NAME
,E.BIRTHDAY
,TRUNC((SYSDATE-E.BIRTHDAY)/365, 0)  AGE
,E.POSITION CURR_POSITION
,P.POSITION BE_POSITION
--,(SYSDATE-E.BIRTHDAY) E
FROM EMP2 E, P_GRADE P
WHERE TRUNC((SYSDATE-E.BIRTHDAY)/365, 0) BETWEEN P.S_AGE AND P.E_AGE;
--------------8장 A3-본인-------------------
SELECT * FROM EMP2; --EMPNO
SELECT * FROM P_GRADE;

SELECT E.NAME
,E.BIRTHDAY
,SUBSTR(E.BIRTHDAY,1,2) - SUBSTR(SYSDATE,1,2)  AGE
,E.POSITION CURR_POSITION
--,P.E.AGE-P.S_AGE  BE_POSITION
--,TRUNC(SYSDATE - E.PEMPNO,2)
--EMPNO , X
FROM EMP2 E, P_GRADE P
WHERE E.POSITION = P.POSITION;
--AND (SUBSTR(E.BIRTHDAY,1,2) - SUBSTR(SYSDATE,1,2) BETWEEN S_AGE AND E_AGE );

--참고 WHERE (ST.STUDNO = SC.STUDNO) 
--참고   AND (SC.TOTAL BETWEEN H.MIN_POINT AND H.MAX_POINT);

--------------8장 A2--------------------
SELECT * FROM EMP2; --EMPNO
SELECT * FROM P_GRADE;

SELECT E.NAME
,P.POSITION
-- E. NAME 이거랑 P.POSITION 잘 확인
--WHERE POSITION으로 병합
,TO_CHAR(PAY,'99,999,999') PAY
,TO_CHAR(P.S_PAY,'99,999,999') PAY
,TO_CHAR(P.E_PAY,'99,999,999') PAY
--EMPNO , X
FROM EMP2 E, P_GRADE P
WHERE E.POSITION = P.POSITION;
------------8장 A1---------------------
--오라클 조인
SELECT S.NAME "STU_NAME"
    ,S.DEPTNO1
     , D.DNAME "DEPT_NAME"
  FROM DEPARTMENT D,STUDENT S
 WHERE S.DEPTNO1=D.DEPTNO ;
   
--ANSI 조인
SELECT S.NAME "STU_NAME"
,DEPTNO1
     , D.DNAME "DEPT_NAME"
  FROM STUDENT S 
  JOIN DEPARTMENT D 
    ON S.DEPTNO1=D.DEPTNO ;

--------------3장 X7--------------------
SELECT NAME
,HPAGE
,SUBSTR(HPAGE,INSTR(HPAGE,'.')+1) DOMAIN
,PAY
,SUM(PAY) OVER(ORDER BY PAY DESC)TOTAL
FROM PROFESSOR
WHERE HPAGE IS NOT NULL;

--------------3장 X6---------------------

SELECT NAME
,EMAIL
,SUBSTR(EMAIL, INSTR(EMAIL,'@')+1) DOMAIN
,PAY
,RANK () OVER(PARTITION BY SUBSTR(EMAIL, INSTR(EMAIL,'@')+1) ORDER BY PAY)
FROM PROFESSOR
WHERE EMAIL IS NOT NULL;
--------------3장 X5----------------------
SELECT NAME
,BIRTHDAY
,EMP_TYPE
,PAY
,TO_CHAR(SUM(PAY) OVER( PARTITION BY EMP_TYPE ORDER BY PAY), '999,999,999') "TOTAL"
FROM EMP2;

--------------3장 X4강사님----------------------
select name
,tel
,position
,TO_CHAR(pay,'99,999,999') "PAY"
,RANK() over( PARTITION BY SUBSTR(TEL,1,INSTR(TEL,')')-1), POSITION ORDER BY PAY DESC) "RANK"
from emp2 ;

--------------3장 X4----------------------
select name
,tel
,position
,TO_CHAR(pay,'99,999,999')
,RANK() over( PARTITION BY POSITION ORDER BY PAY DESC) "RANK"
from emp2
ORDER BY TEL  ;